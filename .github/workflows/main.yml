name: CI
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions

on:
  push:
    branches: 
      - 10.flaskapp

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Run pwd
        run: pwd
      - name: Run ls -al
        run: ls -al
      - name: Setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install depndencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # https://michaelcurrin.github.io/dev-cheatsheets/cheatsheets/python/linting/flake8.html
          # Stop the build if there are Python syntax errors or undefined names.
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warrnings. The github editor is 127 cars wide
          flake8 . --count --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest

  docker:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Docker meta
      id: docker_meta
      uses: crazy-max/ghaction-docker-meta@v1
      with:
        images: lovehyun/flask-app-auto
        tag-semver: |
          {{version}}
          {{major}}.{{minor}}
    - name: Set up docker buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to Dockerhub
      uses: docker/login-action@v1
      with:
        # https://docs.docker.com/ci-cd/github-actions/
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./flask
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.ocker_meta.outputs.labels }}
