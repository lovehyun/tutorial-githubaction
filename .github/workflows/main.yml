name: CI
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions

on:
  push:
    branches: 
      - 11.flaskappdeploy

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Run pwd
        run: pwd
      - name: Run ls -al
        run: ls -al

      - name: Setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install depndencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # https://michaelcurrin.github.io/dev-cheatsheets/cheatsheets/python/linting/flake8.html
          # Stop the build if there are Python syntax errors or undefined names.
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warrnings. The github editor is 127 cars wide
          flake8 . --count --max-complexity=10 --max-line-length=127 --statistics
          
      - name: Test with pytest
        run: |
          pytest

  docker:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Docker meta
      id: docker_meta
      uses: crazy-max/ghaction-docker-meta@v1
      with:
        images: lovehyun/flask-app-auto
        # https://semver.org/
        tag-semver: |
          {{version}}
          {{major}}.{{minor}}

    - name: Set up docker buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Dockerhub
      uses: docker/login-action@v1
      with:
        # https://docs.docker.com/ci-cd/github-actions/
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./flask/
        file: ./flask/Dockerfile
        platforms: linux/amd64
        push: true
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.ocker_meta.outputs.labels }}

    - name: Test image
      run: |
        docker run --rm -d --name test_container -p 5000:5000 lovehyun/flask-app-auto:11.flaskappdeploy
        docker run --link test_container:test_container waisbrot/wait
        curl --fail http://localhost:5000

  deploy_aws:
    runs-on: ubuntu-latest

    needs: docker

    steps:
    - name: AWS SSM Send-Command
      uses: peterkimzz/aws-ssm-send-command@master
      id: ssm
      with:
        aws-region: ${{ secrets.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        instance-ids: ${{ secrets.INSTANCE_ID }}

        working-directory: /home/ubuntu/
        command: ls -al
        comment: Hello world!

    # Catch SSM outputs
    - name: Get the outputs
      run: echo "The Command id is ${{ steps.ssm.outputs.command-id }}"

    # Really deploy
    - name: AWS SSM Send-Command2
      uses: peterkimzz/aws-ssm-send-command@master
      with:
        comment: Start deploy the docker
        command: docker rm -f my-flask-app || true && docker run --rm -d --name my-flask-app -p 5000:5000 lovehyun/flask-app-auto:11.flaskappdeploy

    # Catch SSM outputs
    - name: Get the outputs2
      run: echo "The Command id is ${{ steps.ssm.outputs.command-id }}"
